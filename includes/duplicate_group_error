<h1 id='avoid-error-of-duplicate-group_keys'>Avoid error of duplicate group_keys</h1><h3 id='prerequisite-get-unique-group_keys'>Prerequisite: get unique <code>group_keys</code></h3>
<p>Ensure that you understand how to <a href="#how-to-get-unique-group_keys">get group_keys from <code>dense_rank</code></a>.</p>

<aside class="success">
Why do we use <a href="#how-to-get-unique-group_keys"><code>DENSE_RANK()</code> over <a href=""><code>ROW_NUMBER()</code></a>.
</aside>
<h2 id='how-can-there-by-duplicate-groups'>How can there by duplicate groups</h2>
<blockquote>
<p>Example of unintended duplicate groups</p>
</blockquote>
<div class="highlight"><pre class="highlight plaintext"><code>+------------+----+--------------+-------------------+-----------+--------+
| dates      | rn | rn_by_status | correct_group_key | group_key | status |
+------------+----+--------------+-------------------+-----------+--------+
| 2023-03-01 |  1 |            1 |                 0 |         0 |      0 |
| 2023-03-02 |  2 | ---------- 1 | -------------- 11 | ------- 1 | ---- 1 |
| 2023-03-03 |  3 | ---------- 2 | -------------- 10 | ------- 1 | ---- 0 |
| 2023-03-04 |  4 | ---------- 3 | -------------- 10 | ------- 1 | ---- 0 |
| 2023-03-05 |  5 |            2 |                31 |         3 |      1 |
| 2023-03-06 |  6 |            3 |                31 |         3 |      1 |
| 2023-03-07 |  7 |            4 |                31 |         3 |      1 | 
| 2023-03-08 |  8 |            4 |                40 |         4 |      0 |
| 2023-03-09 |  9 |            5 |                40 |         4 |      0 |
| 2023-03-10 | 10 |            6 |                41 |         4 |      1 |
+------------+----+--------------+-------------------+-----------+--------+
</code></pre></div>
<p>By subtracting <code>rn_by_status</code> from <code>rn</code>, the <code>group_key</code> should be unique to the island and group. This should work in most situations. </p>

<p>Whoever, by random change, the order of the data may cause duplicate <code>group_keys</code>.</p>
<h2 id='best-practice-to-avoid-duplicate-group_keys'>Best practice to avoid duplicate group_keys</h2><div class="highlight"><pre class="highlight sql tab-sql"><code><span class="p">...</span>
          <span class="p">(</span><span class="n">rn</span><span class="o">-</span><span class="n">rn_by_status</span><span class="p">)</span> <span class="k">AS</span> <span class="n">group_key</span><span class="p">,</span>
<span class="n">status</span><span class="o">+</span><span class="mi">10</span><span class="o">*</span><span class="p">(</span><span class="n">rn</span><span class="o">-</span><span class="n">rn_by_status</span><span class="p">)</span> <span class="k">AS</span> <span class="n">correct_group_key</span>
<span class="p">...</span>
</code></pre></div>
<p>To fix this, append the status column to your <code>correct_group_key</code>. Eeliang suggest adding the main identifier (<code>status</code> or <code>user_id</code>) in the ones place. This ensures that we always know where to identify the status.</p>

<p>References:</p>

<ul>
<li><a href="https://binhhoang.io/blog/gaps-and-islands/">Resolving duplicate group_keys</a></li>
</ul>
